<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-02T11:42:02 IST" name="Suite" finished-at="2023-10-02T11:42:23 IST" duration-ms="20949">
    <groups>
    </groups>
    <test started-at="2023-10-02T11:42:02 IST" name="Test" finished-at="2023-10-02T11:42:23 IST" duration-ms="20949">
      <class name="testCase.testCase1">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:02 IST" name="startTest" finished-at="2023-10-02T11:42:05 IST" duration-ms="2136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase1.create_token_from_Auth() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="create_token_from_Auth()[pri:1, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:05 IST" name="create_token_from_Auth" finished-at="2023-10-02T11:42:08 IST" duration-ms="3742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_token_from_Auth -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:08 IST" name="status" finished-at="2023-10-02T11:42:09 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_token_from_Auth status=SUCCESS method=testCase1.create_token_from_Auth()[pri:1, instance:testCase.testCase1@21ca139c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:09 IST" name="startTest" finished-at="2023-10-02T11:42:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase1.booking_create() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="booking_create()[pri:2, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:09 IST" name="booking_create" finished-at="2023-10-02T11:42:10 IST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booking_create -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:10 IST" name="status" finished-at="2023-10-02T11:42:10 IST" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=booking_create status=SUCCESS method=testCase1.booking_create()[pri:2, instance:testCase.testCase1@21ca139c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:10 IST" name="startTest" finished-at="2023-10-02T11:42:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase1.booking_update() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="booking_update()[pri:3, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:10 IST" name="booking_update" finished-at="2023-10-02T11:42:12 IST" duration-ms="1430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booking_update -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:12 IST" name="status" finished-at="2023-10-02T11:42:12 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=booking_update status=SUCCESS method=testCase1.booking_update()[pri:3, instance:testCase.testCase1@21ca139c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method signature="get_booking_by_id()[pri:4, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:12 IST" name="get_booking_by_id" finished-at="2023-10-02T11:42:17 IST" duration-ms="5511" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at testCase.testCase1.get_booking_by_id(testCase1.java:121)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_booking_by_id -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:12 IST" name="startTest" finished-at="2023-10-02T11:42:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase1.get_booking_by_id() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase1@21ca139c]" started-at="2023-10-02T11:42:17 IST" name="status" finished-at="2023-10-02T11:42:17 IST" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_booking_by_id status=FAILURE method=testCase1.get_booking_by_id()[pri:4, instance:testCase.testCase1@21ca139c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
      </class> <!-- testCase.testCase1 -->
      <class name="testCase.testCase2">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:17 IST" name="startTest" finished-at="2023-10-02T11:42:17 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase2.create_token_from_Auth() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="create_token_from_Auth()[pri:1, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:17 IST" name="create_token_from_Auth" finished-at="2023-10-02T11:42:19 IST" duration-ms="1665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_token_from_Auth -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:19 IST" name="status" finished-at="2023-10-02T11:42:19 IST" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_token_from_Auth status=SUCCESS method=testCase2.create_token_from_Auth()[pri:1, instance:testCase.testCase2@5a021cb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method signature="booking_create()[pri:2, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:19 IST" name="booking_create" finished-at="2023-10-02T11:42:20 IST" duration-ms="1356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booking_create -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:19 IST" name="startTest" finished-at="2023-10-02T11:42:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase2.booking_create() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:20 IST" name="status" finished-at="2023-10-02T11:42:20 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=booking_create status=SUCCESS method=testCase2.booking_create()[pri:2, instance:testCase.testCase2@5a021cb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:20 IST" name="startTest" finished-at="2023-10-02T11:42:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase2.booking_partial_update() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="booking_partial_update()[pri:3, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:20 IST" name="booking_partial_update" finished-at="2023-10-02T11:42:22 IST" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booking_partial_update -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:22 IST" name="status" finished-at="2023-10-02T11:42:22 IST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=booking_partial_update status=SUCCESS method=testCase2.booking_partial_update()[pri:3, instance:testCase.testCase2@5a021cb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
        <test-method signature="booking_delete_data()[pri:4, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:22 IST" name="booking_delete_data" finished-at="2023-10-02T11:42:23 IST" duration-ms="1407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booking_delete_data -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:22 IST" name="startTest" finished-at="2023-10-02T11:42:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.testCase2.booking_delete_data() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="status(org.testng.ITestResult)[pri:0, instance:testCase.testCase2@5a021cb9]" started-at="2023-10-02T11:42:23 IST" name="status" finished-at="2023-10-02T11:42:23 IST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=booking_delete_data status=SUCCESS method=testCase2.booking_delete_data()[pri:4, instance:testCase.testCase2@5a021cb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
      </class> <!-- testCase.testCase2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
